@each $color, $tones in $colors {
  @each $colorTone, $colorHex in $tones {
    .bg-#{$color}-#{$colorTone},
    .bg#{capitalize($color)}#{capitalize($colorTone)} {
      background-color: $colorHex;
    }

    .c-#{$color}-#{$colorTone},
    .c#{capitalize($color)}#{capitalize($colorTone)} {
      color: $colorHex;
    }
  }
}

@each $fontKey, $size in $fontSizes {
  .fs-#{$fontKey},
  .fs#{capitalize($fontKey)} {
    font-size: size($fontKey);
    line-height: lineHeight($fontKey);
  }
}

@each $fontWeight, $font in $fonts {
  .fw-#{$fontWeight},
  .fw#{capitalize($fontWeight)} {
    font-family: font($fontWeight);
  }
}

@each $fontWeight, $font in $fonts {
  .fw-#{$fontWeight} {
    font-family: font($fontWeight);

    @if $fontWeight == 'heavy' {
      letter-spacing: 1px;
      text-transform: uppercase;
    }
  }
}

@for $i from 0 through 10 {
  .opacity-#{$i} {
    opacity: $i/10;
  }
}

.hide {
  display: none;
}

@each $mqKey, $size in $containerConfig {
  .hide#{capitalize($mqKey)}Down {
    @include mqDown($mqKey) {
      display: none !important;
    }
  }

  .hide#{capitalize($mqKey)}Up {
    @include mq($mqKey) {
      display: none !important;
    }
  }
}

.alignLeft {
  text-align: left;
}

.alignCenter {
  text-align: center;
}

.alignRight {
  text-align: right;
}

.lowercase {
  text-transform: lowercase;
}

.uppercase {
  text-transform: uppercase;
}

.noDecoration {
  text-decoration: none;
}

.underline {
  text-decoration: underline;
}

.lineThrough {
  text-decoration: line-through;
}

.directionColumn {
  flex-direction: column;
}

.directionRow {
  flex-direction: row;
}
