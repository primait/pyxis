/************************
  Tablet/Desktop component
*************************/
.a-form__field__customSelect {
  background: color(white);
  border: map-get($formConfig, borderWidth) solid color(grey);
  border-radius: map-get($formConfig, borderRadius);
  color: color(green, dark);
  cursor: pointer;
  display: none;
  flex-direction: column;
  position: relative;

  &.is-valid:not(.is-open),
  &.is-touched:not(.is-open) {
    border-color: color(green, dark);
  }

  &.is-open {
    border: map-get($formConfig, borderWidth) solid color(green);
    border-radius: map-get($formConfig, borderRadius) map-get($formConfig, borderRadius) 0px 0px;
    box-shadow: map-get($formConfig, fieldShadow);
  }

  &.is-invalid.is-touched:not(.is-open):not(:focus) {
    border-color: color(error);
    color: color(error);
  }

  &.is-pristine:not(.is-open) {
    border: map-get($formConfig, borderWidth) solid color(grey);
    color: color(green, dark);
  }

  @include mq(medium) {
    display: flex;
  }
}

.a-form__field__customSelect__status {
  align-items: center;
  border-color: inherit;
  color: rgba(color(grey, dark), 0.65);
  display: flex;
  height: map-get($formConfig, fieldHeight);
  padding: map-get($formConfig, fieldPadding);
  position: relative;

  &:after {
    color: color(green, dark);
    content: "\e902";
    font-family: 'icomoon';
    font-size: map-get($formConfig, iconSize);
    position: absolute;
    top: 50%;
    transform: translateY(-50%) rotate(0deg);
    transition: transform 0.2s cubic-bezier(0, 1, 1, 1);
    right: 10px;
  }

  .is-invalid.is-touched & {
    color: color(error);
  }

  .is-valid:not(.is-pristine) & {
    color: color(green, dark);
  }

  .is-open &:after {
    transform: translateY(-50%) rotate(-180deg);
  }

  .is-disabled & {
    background: color(grey, light);
    opacity: map-get($formConfig, fieldDisabledOpacity);
    pointer-events: none;

    &:after {
      color: color(grey, dark);
    }
  }

  .is-invalid.is-touched:not(.is-open):not(:focus) &:after {
    color: color(error);
  }
}

.a-form__field__customSelect__list {
  background: color(white);
  border: map-get($formConfig, borderWidth) solid color(grey);
  border-radius: 0 0 map-get($formConfig, borderRadius) map-get($formConfig, borderRadius);
  border-top: none;
  display: none;
  flex-direction: column;
  left: -1px;
  list-style: none;
  margin: -1px 0 0 0;
  max-height: map-get($formConfig, fieldHeight) * 4 + map-get($formConfig, fieldHeight) * 0.5;
  overflow-x: hidden;
  overflow-y: auto;
  padding: 0;
  position: absolute;
  right: -1px;
  top: 100%;
  z-index: 1;

  .is-open & {
    border: 1px solid color(green);
    border-top-color: color(grey);
    box-shadow: map-get($formConfig, fieldShadow);
    display: flex;
  }
}

.a-form__field__customSelect__list__item {
  align-items: center;
  color: color(grey, dark);
  display: flex;
  flex: 0 0 100%;
  padding: map-get($formConfig, fieldPadding);
  height: map-get($formConfig, fieldHeight);

  &.is-selected,
  &.is-selected:hover {
    background: color(green, light);
    color: color(green, dark);
  }

  &:hover {
    background: color(grey, light);
  }
}

/************************
  Mobile component
*************************/
.a-form__field__select {
  background: color(white);
  border: map-get($formConfig, borderWidth) solid color(grey);
  border-radius: map-get($formConfig, borderRadius);
  color: color(green, dark);
  display: flex;
  height: map-get($formConfig, fieldHeight);
  margin: 0;
  outline: none;
  padding: map-get($formConfig, fieldPadding);

  @include mq(medium) {
    display: none;
  }

  &:focus {
    border-color: color(green);
  }

  &.is-valid,
  &.is-touched {
    border-color: color(green, dark);
  }

  &.is-invalid {
    border-color: color(error);
    color: color(error);
  }

  &.is-disabled,
  &[disabled] {
    background: color(grey, light);
    opacity: map-get($formConfig, fieldDisabledOpacity);
    pointer-events: none;
  }

  option {
    color: color(grey, dark);
  }
}
