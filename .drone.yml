---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
- name: pre-start
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - pre-start-scripts
  environment:
    COUNTRY: it

- name: cache-restore
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    COUNTRY: it
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock

- name: linter-deploy-files
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - cfn-lint
  - shellcheck deploy/deploy deploy/wait_for_stack

- name: check-secrets
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - check-secrets-grants
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint

- name: build-image
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:1 ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  - name: docker-conf
    path: /root/.docker
  depends_on:
  - cache-restore

- name: frontend-dependencies
  image: prima/pyxis-ci:1
  commands:
  - mv .fakenpmrc .npmrc
  - yarn install
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  depends_on:
  - pre-start
  - build-image

- name: build-site
  image: prima/pyxis-ci:1
  commands:
  - yarn build:site
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  depends_on:
  - frontend-dependencies

- name: deploy-staging
  image: prima/pyxis-ci:1
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy staging
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  when:
    branch:
    - master
  depends_on:
  - frontend-dependencies
  - build-site

- name: wait-for-stack-staging
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/wait_for_stack staging
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  when:
    branch:
    - master
  depends_on:
  - deploy-staging

- name: cache-save
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-save .cache .elm node_modules elm-stuff
  environment:
    COUNTRY: it
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  when:
    branch:
    - master
  depends_on:
  - deploy-staging

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint
- name: docker-conf
  host:
    path: /home/ec2-user/.docker

trigger:
  event:
  - push

---
kind: pipeline
name: deploy

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
- name: pre-start
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - pre-start-scripts
  environment:
    COUNTRY: it

- name: cache-restore
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    COUNTRY: it
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock

- name: check-secrets
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - check-secrets-grants
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint

- name: build-image
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:1 ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  - name: docker-conf
    path: /root/.docker
  depends_on:
  - cache-restore

- name: deploy-production
  image: prima/pyxis-ci:1
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy production ${DRONE_TAG}
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - check-secrets
  - build-image

- name: wait-for-stack-production
  image: 001575623345.dkr.ecr.eu-west-1.amazonaws.com/drone-tools:1.17.12
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/wait_for_stack production ${DRONE_TAG}
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - deploy-production

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint
- name: docker-conf
  host:
    path: /home/ec2-user/.docker

trigger:
  event:
  - tag
  ref:
  - refs/tags/*.*.*

---
kind: pipeline
name: email-failure

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: email-failure
  image: drillster/drone-email
  settings:
    from: noreply@prima.it
    host: email-smtp.eu-west-1.amazonaws.com
  environment:
    PLUGIN_PASSWORD:
      from_secret: email_password
    PLUGIN_USERNAME:
      from_secret: email_username

trigger:
  event:
  - push
  status:
  - failure

depends_on:
- default

---
kind: pipeline
name: notify-captainhook-production

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: send
  image: prima/drone-webhook
  settings:
    signature-secret:
      from_secret: captainhook_secret
    urls: http://captainhook-internal.prima.it/drone/deploy

trigger:
  event:
  - tag
  status:
  - success
  - failure

depends_on:
- deploy

---
kind: pipeline
name: notify-captainhook-staging

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: send
  image: plugins/webhook
  settings:
    signature-secret:
      from_secret: captainhook_secret
    urls: http://captainhook-internal.prima.it/drone/deploy

trigger:
  branch:
  - master
  event:
  - push
  status:
  - success
  - failure

depends_on:
- default

---
kind: signature
hmac: 5bf559611e83be6bd1f324a16ba6d2f6e24a5e2d3ca99c20fb5c4a8f1979c64c

...
