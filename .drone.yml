kind: pipeline
name: default

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: ecs
    host:
      path: /etc/profile.d/ecs-credentials-endpoint

clone:
  depth: 1

steps:
  - name: cache-restore
    image: prima/drone-tools:1.15.0
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
      - name: docker
        path: /var/run/docker.sock
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - cache-restore

  - name: build-image
    image: prima/drone-tools:1.15.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    commands:
      - sed -i 's/USER node/USER root/g' Dockerfile
      - docker build -t prima/pyxis-ci:1 .
    depends_on:
      - cache-restore

  - name: init
    image: prima/pyxis-ci:1
    environment:
      YARN_CACHE_FOLDER: /drone/src/.cache
      ELM_HOME: /drone/src/.elm
      NPM_TOKEN:
        from_secret: npm_token
    commands:
      - mv .fakenpmrc .npmrc
      - yarn install
    depends_on:
      - build-image

  - name: build-site
    image: prima/pyxis-ci:1
    environment:
      YARN_CACHE_FOLDER: /drone/src/.cache
      ELM_HOME: /drone/src/.elm
      NPM_TOKEN:
        from_secret: npm_token
    commands:
      - yarn build:site
    depends_on:
      - init

  - name: build-css
    image: prima/pyxis-ci:1
    environment:
      YARN_CACHE_FOLDER: /drone/src/.cache
      ELM_HOME: /drone/src/.elm
      NPM_TOKEN:
        from_secret: npm_token
    commands:
      - yarn build:css
    depends_on:
      - init

  - name: deploy
    image: prima/pyxis-ci:1
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - if [ -n "${DRONE_TAG}" ]; then ./deploy/deploy production ${DRONE_TAG}; elif [ "${DRONE_BRANCH}" = "feature/PRIMA-1732-drone-v1" ]; then ./deploy/deploy staging; fi
    depends_on:
      - build-site
      - build-css

  - name: wait_for_stack
    image: prima/drone-tools:1.15.0
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - if [ -n "${DRONE_TAG}" ]; then ./deploy/wait_for_stack production; elif [ "${DRONE_BRANCH}" = "feature/PRIMA-1732-drone-v1" ]; then ./deploy/wait_for_stack staging; fi
    depends_on:
      - deploy

  - name: cache-save
    image: prima/drone-tools:1.15.0
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
      - name: docker
        path: /var/run/docker.sock
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - cache-save .cache .elm node_modules elm-stuff
    depends_on:
      - deploy
    # when:
    #   branch:
    #     - master

---
kind: pipeline
name: notify

clone:
  disable: true

steps:
  - name: notify_email
    image: drillster/drone-email
    environment:
      PLUGIN_USERNAME:
        from_secret: email_username
      PLUGIN_PASSWORD:
        from_secret: email_password
    settings:
      host: email-smtp.eu-west-1.amazonaws.com
      from: noreply@prima.it

trigger:
  status:
    - failure

depends_on:
  - default
