# Default values for test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount: 1

name: pyxis
environment: qa
country: it

image:
  repository: public.ecr.aws/prima/microservice
  pullPolicy: IfNotPresent
  tag: base-10.2-11

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::815911007681:role/test-fake-ServiceAccountIamRole-1PLE1DFW25O

podAnnotations:
  ad.datadoghq.com/pyxis.logs: '[{"source":"pyxis","service":"pyxis"}]'

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
environmentVars:
  language: elixir
  role: web
  run_migrations: "true"
  bucket_name: prima-artifacts-encrypted
  extras:
    - name: DD_AGENT_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: NODE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP

ports:
  - containerPort: 80
    name: api
    protocol: TCP

livenessProbe:
  httpGet:
    path: /check
    port: 80
  initialDelaySeconds: 15

readinessProbe:
  httpGet:
    path: /check
    port: 80
  initialDelaySeconds: 15

resources:
  requests:
    memory: 512Mi
    cpu: 500m

volumeMounts: {}
volumes: {}

nodeSelector:
  com.prima.node/type: microservice

affinity: |-
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - {{ .Values.name }}
              - key: app.kubernetes.io/version
                operator: In
                values:
                  - {{ .Values.version }}
          topologyKey: kubernetes.io/hostname
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - {{ .Values.name }}
              - key: app.kubernetes.io/version
                operator: In
                values:
                  - {{ .Values.version }}
          topologyKey: failure-domain.beta.kubernetes.io/zone
services:
  - name: test-service-api
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /check
      alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=60
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/backend-protocol: HTTP
    ports:
      - port: 80
        targetPort: 80
        name: web
        protocol: TCP

# ingress:
#   - name: test-public
#     annotations:
#       kubernetes.io/ingress.class: alb
#       alb.ingress.kubernetes.io/group.name: alb-staging-public
#       alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
#     hosts:
#       - host: "api-staging.rely.co.uk"
#         http:
#           paths:
#             - path: "/*"
#               backend:
#                 serviceName: test-service-api
#                 servicePort: 80
#   - name: test-private
#     annotations:
#       kubernetes.io/ingress.class: alb
#       alb.ingress.kubernetes.io/group.name: alb-staging-private
#     hosts:
#       - host: "api-staging.uk.prima"
#         http:
#           paths:
#             - path: "/*"
#               backend:
#                 serviceName: test-service-pricing
#                 servicePort: 80

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80