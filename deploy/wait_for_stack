#!/bin/bash

# script exit when a command fails
set -o errexit
# catch a command error in pipe execution
set -o pipefail
# exit when try to use undeclared variables
# set -o nounset

set -x

if [ $# -eq 0 ]; then
    echo "Devi passare come argomento l'env da utilizzare, staging o production"
    exit 1
fi

ENV=$1
STACK_NAME=ecs-task-pyxis-"${ENV}"

function check_deploy_status {
  local STACK_NAME=$1

  eval STACK_STATUS=$(aws --region eu-west-1 cloudformation describe-stacks \
    --stack-name ${STACK_NAME} \
    | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["Stacks"][0]["StackStatus"]')
}

i=1
while true; do
  check_deploy_status ${STACK_NAME}
  if [ "${STACK_STATUS}" = "CREATE_COMPLETE" ] || [ "${STACK_STATUS}" = "UPDATE_COMPLETE" ]; then
    echo "Deploy successfully done"
    break
  else
    if [ $i -gt 60 ]; then
      echo "Problemi con il deploy!"
      exit 1
    fi
    echo "Waiting for stack ${STACK_NAME} to be ready..."
    sleep 10
  fi
  ((i++))
done
