#!/bin/bash

# script exit when a command fails
set -o errexit
# catch a command error in pipe execution
set -o pipefail
# exit when try to use undeclared variables
set -o nounset
# print and expand each command to stdout before executing it
set -o xtrace

if [ $# -eq 0 ]; then
  echo "Devi passare come argomento l'env da utilizzare, staging o production"
  exit 1
fi

ENV=$1

function check_deploy_status() {
  local STACK_NAME=$1

  i=1
  while true; do
    eval STACK_STATUS="$(aws --region eu-west-1 cloudformation describe-stacks \
      --stack-name "${STACK_NAME}" | jq '.Stacks[0].StackStatus')"

    if [ "${STACK_STATUS}" = "CREATE_COMPLETE" ] || [ "${STACK_STATUS}" = "UPDATE_COMPLETE" ]; then
      echo "Deploy successfully done"
      break
    else
      if [ "${STACK_STATUS}" = "UPDATE_ROLLBACK_IN_PROGRESS" ] || [ "${STACK_STATUS}" = "UPDATE_ROLLBACK_COMPLETE" ] || [ $i -gt 60 ]; then
        echo "Problemi con il deploy!"
        exit 1
      fi
      echo "Waiting for stack ${STACK_NAME} to be ready..."
      sleep 10
    fi
    ((i++))
  done
}

check_deploy_status "ecs-task-pyxis-${ENV}"
